{"version":3,"sources":["components/AppNavigation.tsx","App.tsx","pages/HomePage.tsx","components/Loader/Loader.tsx","components/PersonLink.tsx","components/PeopleList.tsx","api.ts","pages/PeoplePage.tsx","pages/NotFoundPage.tsx","Root.tsx","index.tsx"],"names":["getNavLinkClass","isActive","cn","AppNavigation","className","role","to","App","HomePage","Loader","PersonLink","person","sex","name","slug","PeopleList","people","personSlug","useParams","map","born","died","mother","motherName","father","fatherName","classNames","getPeople","delay","Promise","resolve","setTimeout","then","fetch","response","json","getParent","personList","parentName","find","PeoplePage","useState","setPeople","isLoading","setIsLoading","isError","setisError","loadPeople","useCallback","loadedPeople","useEffect","peopleWithParents","useMemo","length","NotFoundPage","Root","path","element","index","replace","createRoot","document","getElementById","render"],"mappings":"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","file":"static/js/main.5671a072.chunk.js","sourcesContent":["import React from 'react';\nimport { NavLink } from 'react-router-dom';\nimport cn from 'classnames';\n\nconst getNavLinkClass = (\n  { isActive }: { isActive: boolean },\n) => cn('navbar-item', {\n  'has-background-grey-lighter': isActive,\n});\n\nexport const AppNavigation: React.FC = () => (\n  <nav\n    data-cy=\"nav\"\n    className=\"navbar is-fixed-top has-shadow\"\n    role=\"navigation\"\n    aria-label=\"main navigation\"\n  >\n    <div className=\"container\">\n      <div className=\"navbar-brand\">\n        <NavLink\n          className={getNavLinkClass}\n          to=\"/\"\n        >\n          Home\n        </NavLink>\n\n        <NavLink\n          className={getNavLinkClass}\n          to=\"/people\"\n        >\n          People\n        </NavLink>\n      </div>\n    </div>\n  </nav>\n);\n","import React from 'react';\nimport { Outlet } from 'react-router-dom';\nimport './App.scss';\nimport { AppNavigation } from './components/AppNavigation';\n\nexport const App: React.FC = () => (\n  <div data-cy=\"app\">\n    <AppNavigation />\n    <main className=\"section\">\n      <div className=\"container\">\n        <Outlet />\n      </div>\n    </main>\n  </div>\n);\n","import React from 'react';\n\nexport const HomePage: React.FC = () => (\n  <h1 className=\"title\">Home Page</h1>\n);\n","import './Loader.scss';\n\nexport const Loader = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import { Link } from 'react-router-dom';\nimport React from 'react';\nimport cn from 'classnames';\nimport { Person } from '../types/Person';\n\ntype Props = {\n  person: Person;\n};\n\nexport const PersonLink: React.FC<Props> = ({\n  person: { sex, name, slug },\n}) => (\n  <td>\n    <Link\n      className={cn({\n        'has-text-danger': sex === 'f',\n      })}\n      to={`/people/${slug}`}\n    >\n      {name}\n    </Link>\n  </td>\n);\n","import { useParams } from 'react-router-dom';\nimport React from 'react';\nimport classNames from 'classnames';\nimport { Person } from '../types/Person';\nimport { PersonLink } from './PersonLink';\n\ntype Props = {\n  people: Person[];\n};\n\nexport const PeopleList: React.FC<Props> = ({ people }) => {\n  const { personSlug } = useParams();\n\n  return (\n    <table\n      data-cy=\"peopleTable\"\n      className=\"table is-striped is-hoverable is-narrow is-fullwidth\"\n    >\n      <thead>\n        <tr>\n          <th>Name</th>\n          <th>Sex</th>\n          <th>Born</th>\n          <th>Died</th>\n          <th>Mother</th>\n          <th>Father</th>\n        </tr>\n      </thead>\n\n      <tbody>\n        {people.map(person => {\n          const {\n            slug, sex, born, died, mother, motherName, father, fatherName,\n          } = person;\n\n          return (\n            <tr\n              key={slug}\n              data-cy=\"person\"\n              className={classNames({\n                'has-background-warning': personSlug === slug,\n              })}\n            >\n              <PersonLink person={person} />\n              <td>{sex}</td>\n              <td>{born}</td>\n              <td>{died}</td>\n              {mother ? (\n                <PersonLink person={mother} />\n              ) : (\n                <td>{motherName || '-'}</td>\n              )}\n              {father ? (\n                <PersonLink person={father} />\n              ) : (\n                <td>{fatherName || '-'}</td>\n              )}\n            </tr>\n          );\n        })}\n      </tbody>\n    </table>\n  );\n};\n","import { Person } from './types/Person';\n\n// eslint-disable-next-line max-len\nconst API_URL = 'https://mate-academy.github.io/react_people-table/api/people.json';\n\nfunction wait(delay: number) {\n  return new Promise(resolve => setTimeout(resolve, delay));\n}\n\nexport function getPeople(): Promise<Person[]> {\n  // keep this delay for testing purpose\n  return wait(500)\n    .then(() => fetch(API_URL))\n    .then(response => response.json());\n}\n","import React, {\n  useCallback, useEffect, useMemo, useState,\n} from 'react';\nimport { Loader } from '../components/Loader';\nimport { PeopleList } from '../components/PeopleList';\nimport { getPeople } from '../api';\nimport { Person } from '../types/Person';\n\nconst getParent = (personList: Person[], parentName: string | null) => {\n  return personList.find(({ name }) => name === parentName);\n};\n\nexport const PeoplePage: React.FC = () => {\n  const [people, setPeople] = useState<Person[]>([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [isError, setisError] = useState(false);\n\n  const loadPeople = useCallback(async () => {\n    setIsLoading(true);\n    try {\n      const loadedPeople = await getPeople();\n\n      setisError(false);\n      setPeople(loadedPeople);\n    } catch {\n      setisError(true);\n    } finally {\n      setIsLoading(false);\n    }\n  }, []);\n\n  useEffect(() => {\n    loadPeople();\n  }, []);\n\n  const peopleWithParents = useMemo(() => {\n    return people.map((person) => ({\n      ...person,\n      mother: getParent(people, person.motherName),\n      father: getParent(people, person.fatherName),\n    }));\n  }, [people]);\n\n  return (\n    <>\n      <h1 className=\"title\">People Page</h1>\n\n      <div className=\"block\">\n        <div className=\"box table-container\">\n          {isLoading && <Loader />}\n\n          {isError && !isLoading && (\n            <p data-cy=\"peopleLoadingError\" className=\"has-text-danger\">\n              Something went wrong\n            </p>\n          )}\n\n          {!isLoading && people.length === 0 && !isError && (\n            <p data-cy=\"noPeopleMessage\">\n              There are no people on the server\n            </p>\n          )}\n\n          {people.length > 0 && !isLoading && (\n            <PeopleList people={peopleWithParents} />\n          )}\n        </div>\n      </div>\n    </>\n  );\n};\n","import React from 'react';\n\nexport const NotFoundPage: React.FC = () => (\n  <h1 className=\"title\">Page not found</h1>\n);\n","import React from 'react';\nimport {\n  HashRouter as Router, Routes, Route, Navigate,\n} from 'react-router-dom';\nimport { App } from './App';\nimport { HomePage } from './pages/HomePage';\nimport { PeoplePage } from './pages/PeoplePage';\nimport { NotFoundPage } from './pages/NotFoundPage';\n\nexport const Root: React.FC = () => (\n  <Router>\n    <Routes>\n      <Route path=\"/\" element={<App />}>\n        <Route index element={<HomePage />} />\n        <Route path=\"home\" element={<Navigate to=\"/\" replace />} />\n\n        <Route path=\"people\">\n          <Route index element={<PeoplePage />} />\n          <Route path=\":personSlug\" element={<PeoplePage />} />\n        </Route>\n\n        <Route path=\"*\" element={<NotFoundPage />} />\n      </Route>\n    </Routes>\n  </Router>\n);\n","import { createRoot } from 'react-dom/client';\n\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { Root } from './Root';\n\ncreateRoot(document.getElementById('root') as HTMLDivElement)\n  .render(<Root />);\n"],"sourceRoot":""}